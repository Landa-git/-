алгоритм;переменная;тип данных;функция;метод;класс;объект;наследование;инкапсуляция;полиморфизм;абстракция;интерфейс;экземпляр;модуль;пакет;библиотека;API;классовая структура;структура данных;список;множество;очередь;стек;дерево;граф;хеш-таблица;кортеж;строка;массив;рекурсия;итерация;условие;циклическая конструкция;переполнение стека;ошибка выполнения;синтаксическая ошибка;логическая ошибка;компиляция;интерпретация;сборка;система контроля версий;Git;GitHub;GitLab;репозиторий;branch;commit;pull request;push;merge;debugging;ошибка компиляции;обработка исключений;try-catch;ошибка времени выполнения;unit тестирование;мок;покрытие тестами;проверка на баги;интеграционное тестирование;черный ящик;белый ящик;функциональное тестирование;программный продукт;интерфейс пользователя;графический интерфейс;CLI;консоль;рефакторинг;оптимизация кода;производительность;память;анализ производительности;параллелизм;многозадачность;многопоточность;асинхронность;синхронность;событие;callback;обратный вызов;сигналы;слушатели событий;метка времени;поток;параллельное программирование;конкуренция;мьютекс;семафор;критическая секция;синхронизация потоков;использование памяти;сборщик мусора;управление памятью;утечка памяти;память стека;память кучи;обработка данных;сериализация;десериализация;бинарный формат;JSON;XML;YAML;protobuf;REST API;GraphQL;SOAP;подключение к базе данных;SQL;NoSQL;MySQL;PostgreSQL;MongoDB;Redis;SQLite;Oracle;сервер приложений;драйвер базы данных;ORM;объектно-реляционное отображение;масштабируемость;репликация;кэширование;RESTful;SOAP веб-сервис;структура кода;разработка программного обеспечения;разработка под мобильные устройства;кроссплатформенность;мобильная разработка;iOS;Android;разработка веб-приложений;фреймворк;React;Angular;Vue;Django;Flask;Spring;Laravel;ASP.NET;Node.js;Express;Symfony;Bootstrap;Tailwind;Material UI;SASS;CSS;HTML;JavaScript;TypeScript;JQuery;AJAX;Node Package Manager;npm;Yarn;Gulp;Grunt;Webpack;Rollup;Vite;Continuous Integration;CI/CD;Pipeline;системы сборки;поток данных;блокчейн;методология Agile;Scrum;Kanban;разработка по методологии Test-Driven Development;TDD;разработка по методологии Behavior-Driven Development;BDD;деплоймент;окружение разработки;локальное окружение;продакшн;стейджинг;контейнеризация;Docker;Docker Compose;Kubernetes;CI сервер;Jenkins;CircleCI;Travis CI;DevOps;инфраструктура как код;Terraform;Ansible;Puppet;Chef;Vagrant;операционная система;Linux;Windows;macOS;Unix;платформа разработки;IDE;Visual Studio;IntelliJ IDEA;Eclipse;PyCharm;Xcode;Android Studio;Vim;Emacs;Sublime Text;Atom;Notepad++;VCS;Version Control System;репозиторий Git;GitFlow;SVN;Mercurial;Confluence;Jira;Kanban-доска;Kanban-борд;статус задачи;проектный менеджмент;разработка ПО;техдолг;планирование разработки;сроки выполнения;стратегия разработки;UI;UX;пользовательский интерфейс;опыт пользователя;прототипирование;пользовательский тест;перевод с языка на язык;локализация;разработка документации;README;Wiki;API документация;программирование на Python;программирование на Java;программирование на C#;программирование на C++;программирование на JavaScript;программирование на Go;программирование на Swift;программирование на Ruby;программирование на Kotlin;программирование на PHP;программирование на TypeScript;машинное обучение;обучение с учителем;обучение без учителя;обучение с подкреплением;нейронные сети;глубокое обучение;регрессия;классификация;кластеризация;обработка естественного языка;NLP;обработка текста;генерация текста;извлечение признаков;оптимизация гиперпараметров;анализ данных;Data Science;большие данные;Data Mining;нейросетевые алгоритмы;компьютерное зрение;распознавание образов;обработка изображений;чистка данных;анализ данных в реальном времени;анализ графов;теория графов;методы поиска в графах;поиск в глубину;поиск в ширину;динамическое программирование;жадные алгоритмы;алгоритмы сортировки;быстрая сортировка;сортировка слиянием;сортировка вставками;поиск максимума;поиск минимума;поиск подстроки;поиск с использованием хеширования;графы;бинарное дерево;балансировка деревьев;алгоритм Дейкстры;алгоритм Флойда;алгоритм Прима;алгоритм Краскала;алгоритм Беллмана-Форда;алгоритм Хаффмана;жадные алгоритмы;алгоритм Кнута-Морриса-Пратта;поиск в строках;стратегии поиска;программирование на ассемблере;оптимизация алгоритмов;повторное использование кода;архитектура программ;архитектура клиент-сервер;архитектура микросервисов;архитектура монолита;MVC;MVVM;проектирование программ;проектирование интерфейсов;базы данных;репликация;инкрементальные обновления;капсулирование;антипаттерны;многозадачность;гибкие методологии;системы управления проектами;реактивное программирование;событийно-ориентированное программирование;сигнал-обработчик;поток событий;функциональное программирование;императивное программирование;декларативное программирование;рефакторинг кода;структура приложения;приемы программирования;архитектура приложений;регулярные выражения;выражения на Python;выражения на JavaScript;выражения на C#;выражения на Java;интерфейсы в Java;модульное тестирование;покрытие кода;система тестирования;верификация программ;анализ производительности;оптимизация работы программ;профилирование программ;системы поиска;интерфейсы поиска;кэширование данных;движок поиска;базы данных в памяти;исходный код;передача данных;параллельная обработка данных;технологии распределённых систем;сетевые приложения;разработка серверов;проектирование баз данных;интерфейсы программирования приложений;реактивные системы;оптимизация работы с памятью;операции с потоками;жизненный цикл программы
